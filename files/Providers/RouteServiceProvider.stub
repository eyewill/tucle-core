<?php

namespace App\Providers;

use Illuminate\Support\Facades\Route;
use Illuminate\Foundation\Support\Providers\RouteServiceProvider as ServiceProvider;

class RouteServiceProvider extends ServiceProvider
{
    /**
     * This namespace is applied to your controller routes.
     *
     * In addition, it is set as the URL generator's root namespace.
     *
     * @var string
     */
    protected $namespace = 'App\Http\Controllers';

    /**
     * Define your route model bindings, pattern filters, etc.
     *
     * @return void
     */
    public function boot()
    {
        Route::middleware('json', \Eyewill\TucleCore\Http\Middleware\Json::class);

        parent::boot();
    }

    /**
     * Define the routes for the application.
     *
     * @return void
     */
    public function map()
    {
        $this->mapApiRoutes();

        $this->mapWebRoutes();

        //
    }

    /**
     * Define the "web" routes for the application.
     *
     * These routes all receive session state, CSRF protection, etc.
     *
     * @return void
     */
    protected function mapWebRoutes()
    {
        // 管理画面のルーティング
        Route::group([
            'namespace' => $this->namespace,
            'prefix' => 'admin',
        ], function ($router) {

            $router->group([
                'middleware' => 'cms',
            ], function () {

                require base_path('routes/admin.php');
                foreach ($this->app['files']->glob(base_path('routes/admin/*.php')) as $file)
                {
                    include $file;
                }
            });

            // 認証のルーティング
            Route::group([
                'middleware' => 'web',
            ], function ($router) {

                $router->get('login', 'Auth\LoginController@showLoginForm')->name('login');
                $router->post('login', 'Auth\LoginController@login');
                $router->get('logout', 'Auth\LoginController@logout')->name('logout');
            });
        });

        // フロントエンドのルーティング
        Route::group([
            'namespace' => 'Http/Frontend/Controllers',
            'middleware' => 'web',
        ], function ($router) {

            require base_path('/routes/web.php');
            foreach ($this->app['files']->glob(base_path('routes/web/*.php')) as $file)
            {
                include $file;
            }
        });
        }

    /**
     * Define the "api" routes for the application.
     *
     * These routes are typically stateless.
     *
     * @return void
     */
    protected function mapApiRoutes()
    {
        Route::group([
            'middleware' => 'api',
            'namespace' => $this->namespace,
            'prefix' => 'api',
        ], function ($router) {
            require base_path('routes/api.php');
        });
    }
}
